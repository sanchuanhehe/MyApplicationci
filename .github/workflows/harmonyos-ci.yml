name: HarmonyOS CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/sanchuanhehe/harmony-next-pipeline-docker/harmonyos-ci-image:latest

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 安装项目依赖
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          ohpm install --all

      # 3. 构建 HAP 文件
      - name: Build HAP
        run: |
          cd ${{ github.workspace }}
          hvigorw clean --no-daemon
          hvigorw assembleHap --mode module -p product=default -p buildMode=debug --no-daemon

      # 4. 上传构建输出作为 artifact
      - name: Upload Build Output
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./entry/build/default/outputs/default/

  publish:
    needs: build
    runs-on: ubuntu-latest
    container: ghcr.io/sanchuanhehe/harmony-next-pipeline-docker/harmonyos-ci-image:latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/release/')

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 下载构建输出 artifact
      - name: Download Build Output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./entry/build/default/outputs/default/

      # 3. 签名 HAP 文件
      - name: Sign HAP
        run: |
          cd ${{ github.workspace }}
          java -jar /harmonyos-tools/command-line-tools/sdk/default/openharmony/toolchains/lib/hap-sign-tool.jar \
          sign-app \
          -keyAlias "ide_demo_app" \
          -signAlg "SHA256withECDSA" \
          -mode "localSign" \
          -appCertFile "signing/demo.cer" \
          -profileFile "signing/demo.p7b" \
          -inFile "./entry/build/default/outputs/default/entry-default.hap" \
          -keystoreFile "signing/idedemokey.p12" \
          -outFile "./entry/build/default/outputs/default/entry-default-signed.hap" \
          -keyPwd "${{ secrets.KEY_PASSWORD }}" \
          -keystorePwd "${{ secrets.KEYSTORE_PASSWORD }}" \
          -signCode "1"

      # 4. 创建 GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 5. 上传 HAP 文件到 GitHub Release
      - name: Upload HAP to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./entry/build/default/outputs/default/entry-default-signed.hap
          asset_name: entry-default-signed.hap
          asset_content_type: application/octet-stream
